import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.*;
import java.net.URL;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.*;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import static javax.swing.JFileChooser.*;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ramneek Kalra
 */
public class StudentAdder extends javax.swing.JFrame {

    /**
     * Creates new form StudentAdder
     */
    public StudentAdder() {
        initComponents();
    }
    File file=null;
    String str_colArow1=null ;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        photo = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        fn = new javax.swing.JTextField();
        m = new javax.swing.JRadioButton();
        f = new javax.swing.JRadioButton();
        c = new javax.swing.JTextField();
        mobile = new javax.swing.JFormattedTextField();
        sem = new javax.swing.JComboBox<>();
        year = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        no = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        filter = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        studentno = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        search = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Comuter Science Department");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logoo1.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Student Registration"));
        jPanel1.setToolTipText("");

        photo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/finger.png"))); // NOI18N
        photo.setToolTipText("Fingerprint");
        photo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Scan Fingerprint");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setNextFocusableComponent(jButton2);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Enrollment No:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Name:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Father's Name:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Gender");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Mobile No:");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Class:");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Semester:");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("Year:");

        name.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        name.setNextFocusableComponent(fn);

        fn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        fn.setNextFocusableComponent(m);

        buttonGroup1.add(m);
        m.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        m.setText("Male");
        m.setNextFocusableComponent(f);

        buttonGroup1.add(f);
        f.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        f.setText("Female");
        f.setNextFocusableComponent(mobile);

        c.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        c.setNextFocusableComponent(sem);

        try {
            mobile.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        mobile.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        mobile.setNextFocusableComponent(c);

        sem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "1", "2", "3", "4", "5", "6", "7", "8" }));
        sem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sem.setNextFocusableComponent(year);

        year.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "1", "2", "3", "4" }));
        year.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        year.setNextFocusableComponent(jButton1);

        jLabel12.setText("(* Mention like <CSE-3B>)");

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("Add Student");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        try {
            no.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        no.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        no.setNextFocusableComponent(name);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(photo))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jLabel12)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9))
                            .addGap(47, 47, 47)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(mobile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(c, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(sem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(m)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(f)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addComponent(name)
                                .addComponent(fn)
                                .addComponent(no)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(fn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(m)
                            .addComponent(f)))
                    .addComponent(photo, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(sem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(7, 7, 7))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Viewer"));

        table.setAutoCreateRowSorter(true);
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enrollment No", "Student Name", "Class", "Semester", "Year"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(table);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("Filter By:");

        filter.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Enrollment No", "Student Name", "Class", "Semester", "Year" }));
        filter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("Refresh");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("No. of Students Listed:");

        studentno.setEditable(false);
        studentno.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setText("Modify");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        search.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filter, 0, 1, Short.MAX_VALUE))
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(studentno))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(studentno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton5.setText("Back to Home");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton6.setText("Logout User");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(273, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(231, 231, 231))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jButton6)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{  
            FileInputStream fis=new FileInputStream(file);
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection con=(Connection)
            DriverManager.getConnection("jdbc:mysql://localhost/Checktime","root","HMRITM");  
            PreparedStatement stmt=con.prepareStatement("insert into studentdetail values(?,?,?,?,?,?,?,?,?)");  
            stmt.setString(1,no.getText()); 
            stmt.setString(2,name.getText()); 
            stmt.setString(3,fn.getText()); 
            if(m.isSelected()==true){
                stmt.setString(4,"Male");
            }
            else if(f.isSelected()==true){
                stmt.setString(4, "Female");
            }
            stmt.setString(5,mobile.getText());
            stmt.setString(6,c.getText());  
            Object r=sem.getSelectedItem();
            stmt.setString(7,r.toString());  
            Object a=year.getSelectedItem();
            stmt.setString(8,a.toString());
            stmt.setBinaryStream(9, fis, (int) file.length());
            int i = 0;
            i=stmt.executeUpdate();
            if(i==0){
                JOptionPane.showMessageDialog(this, "Please Review all details again");
            }
            if(i==1){
                JOptionPane.showMessageDialog(this, "Student Detail Added Successfully");
            }
            else{
                JOptionPane.showMessageDialog(this, "There is a problem in the setup of database. Connect Supervisor");
                no.setText("");
                name.setText("");
                c.setText("");
                sem.setSelectedIndex(0);
                year.setSelectedIndex(0);
                fn.setText("");
                mobile.setText("");
                buttonGroup1.clearSelection();
                File f=new File("D:\\Developers Tool\\NetBeansProjects\\CheckTime\\src\\finger.png");
                BufferedImage ias=ImageIO.read(f);
                ImageIcon asc=new ImageIcon(ias);
                photo.setIcon(asc);
            }
            con.close();
            no.setText("");
            name.setText("");
            c.setText("");
            sem.setSelectedIndex(0);
            year.setSelectedIndex(0);
            fn.setText("");
            mobile.setText("");
            buttonGroup1.clearSelection();
            File f=new File("D:\\Developers Tool\\NetBeansProjects\\CheckTime\\src\\finger.png");
            BufferedImage ias=ImageIO.read(f);
            ImageIcon asc=new ImageIcon(ias);
            photo.setIcon(asc);
            }
        catch(Exception e){System.out.println(e); }  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            Process ex = Runtime.getRuntime().exec("D:\\Extra Docs\\ftrScanApiEx_v3.3\\ftrScanApiEx.exe");
            BufferedImage img=null;
            ex.waitFor();
                JFileChooser jf=new JFileChooser();
                jf.setDialogTitle("Select you saved Fingerprint...");
                jf.setFileSelectionMode(FILES_ONLY);
                jf.setMultiSelectionEnabled(false);
                FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","gif","png","bmp");
                jf.addChoosableFileFilter(filter);
                int rr=jf.showOpenDialog(this);
                if(rr==JFileChooser.APPROVE_OPTION){
                    file=new File(jf.getSelectedFile().getAbsolutePath());
                    img = ImageIO.read(file);
                    ImageIcon ii = new ImageIcon(img);
                    ImageIcon imageIcon = new ImageIcon(ii.getImage().getScaledInstance(photo.getWidth(),photo.getHeight(), Image.SCALE_SMOOTH));
                    photo.setIcon(imageIcon);}
                else{
                    JOptionPane.showMessageDialog(this, "Sorry No file detected/selected");
                }
            
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        table.getTableHeader().setReorderingAllowed(false);
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
                }
        String query="select*from studentdetail";
        try{
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection c=(Connection)
            DriverManager.getConnection("jdbc:mysql://localhost/checktime","root","HMRITM");
            java.sql.Statement stmt=c.createStatement();
            ResultSet rs=stmt.executeQuery(query);
                    while(rs.next()){                           
                String nNo=rs.getString("Enrollment_No");
                String nEmpName=rs.getString("Name");
                String nEmpAddress=rs.getString("Class");
                String nSem=rs.getString("Semester");
                String nYear=rs.getString("Year");
                model.addRow(new Object[]{nNo,nEmpName,nEmpAddress,nSem,nYear});
                for(int i=0;i<table.getColumnCount();i++){
                    DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                    TableColumn col = colModel.getColumn(i);
                    int width = 0;

                    TableCellRenderer renderer = col.getHeaderRenderer();
                    if (renderer == null) {
                      renderer = table.getTableHeader().getDefaultRenderer();
                    }
                    Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                        false, 0, 0);
                    width = comp.getPreferredSize().width;
                    col.setPreferredWidth(width+2);      
              }
                int re=model.getRowCount();
                String noo=String.valueOf(re);
                studentno.setText(noo);
            }
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
         }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        table.getTableHeader().setReorderingAllowed(false);
        String se=search.getText();
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        if(filter.getSelectedIndex()==1){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
                }
        String query="select*from studentdetail where Enrollment_No="+se;
        try{
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection c=(Connection)
            DriverManager.getConnection("jdbc:mysql://localhost/checktime","root","HMRITM");
            java.sql.Statement stmt=c.createStatement();
            ResultSet rs=stmt.executeQuery(query);
                    while(rs.next()){
                String nNo=rs.getString("Enrollment_No");
                String nEmpName=rs.getString("Name");
                String nEmpAddress=rs.getString("Class");
                String nSem=rs.getString("Semester");
                String nYear=rs.getString("Year");
                model.addRow(new Object[]{nNo,nEmpName,nEmpAddress,nSem,nYear});
                for(int i=0;i<table.getColumnCount();i++){
                    DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                    TableColumn col = colModel.getColumn(i);
                    int width = 0;

                    TableCellRenderer renderer = col.getHeaderRenderer();
                    if (renderer == null) {
                      renderer = table.getTableHeader().getDefaultRenderer();
                    }
                    Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                        false, 0, 0);
                    width = comp.getPreferredSize().width;
                    col.setPreferredWidth(width+2);      
              }
                int re=model.getRowCount();
                String noo=String.valueOf(re);
                studentno.setText(noo);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
         }
        }
        else if(filter.getSelectedIndex()==2){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
                }
        String query="select*from studentdetail where Name='"+se+"';";
        try{
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection c=(Connection)
            DriverManager.getConnection("jdbc:mysql://localhost/checktime","root","HMRITM");
            java.sql.Statement stmt=c.createStatement();
            ResultSet rs=stmt.executeQuery(query);
                    while(rs.next()){
                String nNo=rs.getString("Enrollment_No");
                String nEmpName=rs.getString("Name");
                String nEmpAddress=rs.getString("Class");
                String nSem=rs.getString("Semester");
                String nYear=rs.getString("Year");
                model.addRow(new Object[]{nNo,nEmpName,nEmpAddress,nSem,nYear});
                for(int i=0;i<table.getColumnCount();i++){
                    DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                    TableColumn col = colModel.getColumn(i);
                    int width = 0;

                    TableCellRenderer renderer = col.getHeaderRenderer();
                    if (renderer == null) {
                      renderer = table.getTableHeader().getDefaultRenderer();
                    }
                    Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                        false, 0, 0);
                    width = comp.getPreferredSize().width;
                    col.setPreferredWidth(width+2);     
                    int re=model.getRowCount();
                    String noo=String.valueOf(re);
                    studentno.setText(noo);
              }
                
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
         }
        }
        else if(filter.getSelectedIndex()==3){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
                }
        String query="select*from studentdetail where Class='"+se+"';";
        try{
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection c=(Connection)
            DriverManager.getConnection("jdbc:mysql://localhost/checktime","root","HMRITM");
            java.sql.Statement stmt=c.createStatement();
            ResultSet rs=stmt.executeQuery(query);
                    while(rs.next()){
                String nNo=rs.getString("Enrollment_No");
                String nEmpName=rs.getString("Name");
                String nEmpAddress=rs.getString("Class");
                String nSem=rs.getString("Semester");
                String nYear=rs.getString("Year");
                model.addRow(new Object[]{nNo,nEmpName,nEmpAddress,nSem,nYear});
                for(int i=0;i<table.getColumnCount();i++){
                    DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                    TableColumn col = colModel.getColumn(i);
                    int width = 0;

                    TableCellRenderer renderer = col.getHeaderRenderer();
                    if (renderer == null) {
                      renderer = table.getTableHeader().getDefaultRenderer();
                    }
                    Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                        false, 0, 0);
                    width = comp.getPreferredSize().width;
                    col.setPreferredWidth(width+2);      
              }
                int re=model.getRowCount();
                String noo=String.valueOf(re);
                studentno.setText(noo);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
         }
        }
        else if(filter.getSelectedIndex()==4){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
                }
        String query="select*from studentdetail where Semester="+se;
        try{
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection c=(Connection)
            DriverManager.getConnection("jdbc:mysql://localhost/checktime","root","HMRITM");
            java.sql.Statement stmt=c.createStatement();
            ResultSet rs=stmt.executeQuery(query);
                    while(rs.next()){
                String nNo=rs.getString("Enrollment_No");
                String nEmpName=rs.getString("Name");
                String nEmpAddress=rs.getString("Class");
                String nSem=rs.getString("Semester");
                String nYear=rs.getString("Year");
                model.addRow(new Object[]{nNo,nEmpName,nEmpAddress,nSem,nYear});
                for(int i=0;i<table.getColumnCount();i++){
                    DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                    TableColumn col = colModel.getColumn(i);
                    int width = 0;

                    TableCellRenderer renderer = col.getHeaderRenderer();
                    if (renderer == null) {
                      renderer = table.getTableHeader().getDefaultRenderer();
                    }
                    Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                        false, 0, 0);
                    width = comp.getPreferredSize().width;
                    col.setPreferredWidth(width+2);      
              }
                int re=model.getRowCount();
                String noo=String.valueOf(re);
                studentno.setText(noo);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
         }
        }
        else if(filter.getSelectedIndex()==5){
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
                }
        String query="select*from studentdetail where Year="+se;
        try{
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection c=(Connection)
            DriverManager.getConnection("jdbc:mysql://localhost/checktime","root","HMRITM");
            java.sql.Statement stmt=c.createStatement();
            ResultSet rs=stmt.executeQuery(query);
                    while(rs.next()){
                String nNo=rs.getString("Enrollment_No");
                String nEmpName=rs.getString("Name");
                String nEmpAddress=rs.getString("Class");
                String nSem=rs.getString("Semester");
                String nYear=rs.getString("Year");
                model.addRow(new Object[]{nNo,nEmpName,nEmpAddress,nSem,nYear});
                for(int i=0;i<table.getColumnCount();i++){
                    DefaultTableColumnModel colModel = (DefaultTableColumnModel) table.getColumnModel();
                    TableColumn col = colModel.getColumn(i);
                    int width = 0;

                    TableCellRenderer renderer = col.getHeaderRenderer();
                    if (renderer == null) {
                      renderer = table.getTableHeader().getDefaultRenderer();
                    }
                    Component comp = renderer.getTableCellRendererComponent(table, col.getHeaderValue(), false,
                        false, 0, 0);
                    width = comp.getPreferredSize().width;
                    col.setPreferredWidth(width+2);      
              }
                int re=model.getRowCount();
                String noo=String.valueOf(re);
                studentno.setText(noo);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
         }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowClosing

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int r=JOptionPane.showConfirmDialog(this, "Are you sure you want to Logout?");
        if(r==1){
            this.setVisible(false);
            this.setVisible(true);
        }
        else if(r==0){
            this.setVisible(false);
            CSE m=new CSE();
            JOptionPane.showMessageDialog(this, "You are successfully logged out!!");
            m.setVisible(true);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        CSEclass d=new CSEclass();
        d.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the comfingerd line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentAdder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField c;
    private javax.swing.JRadioButton f;
    private javax.swing.JComboBox<String> filter;
    private javax.swing.JTextField fn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton m;
    private javax.swing.JFormattedTextField mobile;
    private javax.swing.JTextField name;
    private javax.swing.JFormattedTextField no;
    private javax.swing.JLabel photo;
    private javax.swing.JTextField search;
    private javax.swing.JComboBox<String> sem;
    private javax.swing.JTextField studentno;
    private javax.swing.JTable table;
    private javax.swing.JComboBox<String> year;
    // End of variables declaration//GEN-END:variables
}
